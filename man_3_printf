.TH _PRINTF 3 "October 2025" "Version 1.0" "_printf man page"
.SH NAME
_printf \- formatted output conversion
.SH SYNOPSIS
.B #include "main.h"
.PP
.B int _printf(const char *format, ...);
.SH DESCRIPTION
The
.B _printf()
function produces output according to a format as described below.
The function writes output to
.B stdout,
the standard output stream.
.PP
This function writes the output under the control of a
.I format
string that specifies how subsequent arguments are converted for output.
.SH RETURN VALUE
Upon successful return, 
.B _printf()
returns the number of characters printed (excluding the null byte used to end output to strings).
.PP
If an output error is encountered, a negative value is returned.
.SH FORMAT STRING
The format string is a character string composed of zero or more directives.
.SH CONVERSION SPECIFIERS
A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:
.TP
.B c
The int argument is converted to an unsigned char, and the resulting character is written.
.TP
.B s
The const char * argument is expected to be a pointer to a character array. Characters from the array are written up to (but not including) a terminating null byte.
.TP
.B d, i
The int argument is converted to signed decimal notation.
.TP
.B %
A '%' is written. No argument is converted. The complete conversion specification is '%%'.
.SH EXAMPLES
To print the string "Hello, World!" followed by a new line:
.PP
.nf
.RS
_printf("Hello, %s!\\n", "World");
.RE
.fi
.PP
To print an integer:
.PP
.nf
.RS
_printf("The answer is %d\\n", 42);
.RE
.fi
.SH SEE ALSO
.BR printf (3),
.BR write (2)
.SH AUTHORS
Owen Mousa Algarni, Tariq Almutairi Rasheed Tariq
.SH BUGS
No known bugs.
